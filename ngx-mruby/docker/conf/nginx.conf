user daemon;
daemon off;
master_process off;
worker_processes auto;
error_log stderr;

events {
    worker_connections 1024;
}

http {

    mruby_init_code '
      userdata = Userdata.new
      userdata.proxy_dest = "127.0.0.1:0"
    ';

    server {
        listen 80;

        location /container/show {
            mruby_content_handler_code '
              userdata = Userdata.new
              Nginx.echo "#{userdata.proxy_dest}"
            '; 
        }

        location /container/switchover {
            mruby_content_handler_code '
              v = Nginx::Var.new
              if v.arg_dest.nil?
                Nginx.errlogger Nginx::LOG_ERR, "Invalid parameter #{v.arg_dest}"
                Nginx.return Nginx::HTTP_BAD_REQUEST
              end
              userdata = Userdata.new
              userdata.proxy_dest = v.arg_dest
              Nginx.echo "ack"
            ';
        }

        location / {
            resolver 127.0.0.11 valid=2s;
            mruby_set_code $backend '
              userdata = Userdata.new
              userdata.proxy_dest
            ';
            proxy_pass http://$backend;
        }
    }
}
